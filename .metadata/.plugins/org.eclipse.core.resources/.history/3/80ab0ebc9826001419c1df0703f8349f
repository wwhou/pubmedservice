package org.lens.client;

import org.utils.UniversalClient;

public class PatentClient extends UniversalClient{
//	//private final WebResource service;
//	private static final String DEFAULT_BASE_URL="http://localhost:8080/DataCollectionService/";
	private static final String PATENT_SERVICE_PATH="rest/search/patent/article";
	
	// use default url
	public PatentClient(){
		super(PATENT_SERVICE_PATH);
	}
	
	public PatentClient(String url){
		super(url,PATENT_SERVICE_PATH);
	}
	
//	public PatentClient(final String url){
//		final ClientConfig config = new DefaultClientConfig();
//        config.getClasses().add(JacksonJsonProvider.class);
//        config.getClasses().add(ObjectMapperProvider.class);
//        final Client client = Client.create(config);
//        service = client.resource(url + PATENT_SERVICE_PATH);
//	}
//	
//	 public Collection<Article> call(final PatentParameter request) {
//	        ClientResponse response = null;
//	        try {
//	            response = service.type(MediaType.APPLICATION_JSON)
//	                              .accept(MediaType.APPLICATION_JSON)
//	                              .post(ClientResponse.class, request);
//	            return response.getEntity(new GenericType<Collection<Article>>() {});
//	        }
//	        finally {
//	            // belt and braces
//	            if (response != null) {
//	                //noinspection OverlyBroadCatchBlock
//	                try { response.close(); }
//	                catch (final Throwable ignored) { /* do nothing */ }
//	            }
//	        }
//	    }
}
